"search across indices with mixed long and double numeric types":
  - skip:
      version: " - 2.6.99"
      reason: relies on numeric sort optimization that landed in 2.7.0 only

  - do:
      indices.create:
        index: test_1
        body:
          mappings:
            properties:
              counter:
                type: long

  - do:
      indices.create:
        index: test_2
        body:
          mappings:
            properties:
              counter:
                type: double

  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: test_1
          - counter: 223372036854775800
          - index:
              _index: test_2
          - counter: 1223372036854775800.23
          - index:
              _index: test_2
          - counter: 184.4

  - do:
      search:
        index: test_*
        rest_total_hits_as_int: true
        body:
          sort: [{ counter: desc }]
  - match: { hits.total: 3 }
  - length: { hits.hits: 3 }
  - match: { hits.hits.0._index: test_2 }
  - match: { hits.hits.0._source.counter: 1223372036854775800.23 }
  - match: { hits.hits.0.sort.0: 1223372036854775800.23 }
  - match: { hits.hits.1._index: test_1 }
  - match: { hits.hits.1._source.counter: 223372036854775800 }
  - match: { hits.hits.1.sort.0: 223372036854775800  }

  - do:
      search:
        index: test_*
        rest_total_hits_as_int: true
        body:
          sort: [{ counter: asc }]
  - match: { hits.total: 3 }
  - length: { hits.hits: 3 }
  - match: { hits.hits.0._index: test_2 }
  - match: { hits.hits.0._source.counter: 184.4 }
  - match: { hits.hits.0.sort.0: 184.4 }
  - match: { hits.hits.1._index: test_1 }
  - match: { hits.hits.1._source.counter: 223372036854775800 }
  - match: { hits.hits.1.sort.0: 223372036854775800 }

---
"search across indices with mixed long, double and unsigned_long numeric types":
  - skip:
      version: " - 2.7.99"
      reason: unsigned_long is not supported before 2.8.0

  - do:
      indices.create:
        index: test_1
        body:
          mappings:
            properties:
              counter:
                type: unsigned_long
  - do:
      indices.create:
        index: test_2
        body:
          mappings:
            properties:
              counter:
                type: long
  - do:
      indices.create:
        index: test_3
        body:
          mappings:
            properties:
              counter:
                type: double
  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: test_1
          - counter: 10223372036854775800
          - index:
              _index: test_2
          - counter: 223372036854775800
          - index:
              _index: test_3
          - counter: 184.0

  - do:
      catch: bad_request
      search:
        index: test_*
        rest_total_hits_as_int: true
        body:
          sort: [{ counter: asc }]
  # The search across fields with mixed types (where one of those is unsigned_long) is not supported
  - match: { status: 400 }
  - match: { error.type: search_phase_execution_exception }
  - match: { error.caused_by.reason: "Can't do sort across indices, as a field has [unsigned_long] type in one index, and different type in another index!" }

---
"search across indices with mixed long and double and float numeric types":
  - skip:
      version: " - 2.11.0"
      reason: half float was broken before 2.11.1

  - do:
      indices.create:
        index: test_1
        body:
          mappings:
            properties:
              counter:
                type: long

  - do:
      indices.create:
        index: test_2
        body:
          mappings:
            properties:
              counter:
                type: double

  - do:
      indices.create:
        index: test_3
        body:
          mappings:
            properties:
              counter:
                type: half_float

  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: test_1
          - counter: 223372036854775800
          - index:
              _index: test_2
          - counter: 1223372036854775800.23
          - index:
              _index: test_2
          - counter: 184.4
          - index:
              _index: test_3
          - counter: 187.4
          - index:
              _index: test_3
          - counter: 194.4

  - do:
      search:
        index: test_*
        rest_total_hits_as_int: true
        body:
          sort: [{ counter: desc }]
  - match: { hits.total: 5 }
  - length: { hits.hits: 5 }
  - match: { hits.hits.0._index: test_2 }
  - match: { hits.hits.0._source.counter: 1223372036854775800.23 }
  - match: { hits.hits.0.sort.0: 1223372036854775800.23 }
  - match: { hits.hits.1._index: test_1 }
  - match: { hits.hits.1._source.counter: 223372036854775800 }
  - match: { hits.hits.1.sort.0: 223372036854775800  }
  - match: { hits.hits.2._index: test_3 }
  - match: { hits.hits.2._source.counter: 194.4 }

  - do:
      search:
        index: test_*
        rest_total_hits_as_int: true
        body:
          sort: [{ counter: asc }]
  - match: { hits.total: 5 }
  - length: { hits.hits: 5 }
  - match: { hits.hits.0._index: test_2 }
  - match: { hits.hits.0._source.counter: 184.4 }
  - match: { hits.hits.0.sort.0: 184.4 }
  - match: { hits.hits.1._index: test_3 }
  - match: { hits.hits.1._source.counter: 187.4 }
